#!/bin/bash

use std
use git

PROGNAME="${0##*/}"
COMMITMESSAGE="${GIT_DEFAULT_COMMIT_MESSAGE:=.}"
GITDIR=$(/usr/bin/git rev-parse --git-dir 2>/dev/null ||:)
ARGS="$@"

[ -n "$GITDIR" ] || die "Bir Git dizinininde değilsiniz"
GITDIR=$(readlink -f "$GITDIR")

ensure_not_in_dir() {
	dir=$(readlink -f "$1")
	case "$GITDIR" in
	"${dir}"/.git)
		die "${dir} dizininde bu komutu çalıştırmayın"
		;;
	esac
}

_run() {
	local message="$1"
	local cmd="$2"
	[ -z "$ARGS" ] || cmd="$cmd $ARGS"
	echo -e -n "${CO_HILITE}$message ${CO_NORMAL}" 2>&1
	if $cmd >/dev/null 2>&1; then
		echo -e "${CO_GOOD}tamam${CO_NORMAL}" 2>&1
	else
		echo -e "${CO_BAD}olmadı${CO_NORMAL}" 2>&1
		echo -e "${CO_HILITE}'$cmd' komutunu elle girerek hatayı görün.${CO_NORMAL}"
		return 1
	fi
}

_git_commit() {
	if git_is_clean; then
		say "Değişiklik yok"
		return 127
	else
		_run "Kaydediliyor..." "/usr/bin/git commit -a -m "$COMMITMESSAGE""
	fi
	return 0
}

_git_push() {
	_run "Gönderiliyor..." "/usr/bin/git push"
	return 0
}

_git_pull() {
	local prev=$(git rev-parse HEAD 2>/dev/null ||:)
	_run "Güncelleniyor..." "/usr/bin/git pull"
	case "$(git rev-parse HEAD 2>/dev/null ||:)" in
	$prev)
		say "Güncelleme yok"
		;;
	*)
		say "Güncelleme var"
		git log --oneline --name-only $prev...HEAD | sed -e "s/^/\t/"
		;;
	esac
	return 0
}

case "$PROGNAME" in
git-.)
	ensure_not_in_dir ~
	_git_commit || exit 0
	;;
git-..)
	ensure_not_in_dir ~
	err=0; _git_commit || err=$?
	[ $err -eq 1 ] || _git_push
	;;
git-=)
	ensure_not_in_dir ~
	_git_pull
	;;
esac
